[{"content":"Cómo detectar y mitigar ataques de fuerza bruta en SSH Los ataques de fuerza bruta son intentos repetidos de adivinar contraseñas de usuarios en SSH.\nRevisar intentos de acceso 1 grep \u0026#34;Failed password\u0026#34; /var/log/auth.log Configurar fail2ban 1 2 3 sudo apt install fail2ban sudo systemctl enable fail2ban sudo systemctl start fail2ban Ajustar SSH Cambiar puerto por defecto Deshabilitar root login Usar claves en lugar de contraseñas Estas medidas reducen significativamente el riesgo de ataques automatizados.\n","date":"2025-10-24T00:00:00Z","permalink":"https://dev.davidalvarezp.com/p/mitigar-fuerza-bruta-ssh/","title":"Cómo detectar y mitigar ataques de fuerza bruta en SSH"},{"content":"Monitoriza tus servidores con Prometheus y Grafana Prometheus y Grafana permiten visualizar métricas clave de tus servidores.\nInstalar Prometheus 1 sudo apt install prometheus Instalar Grafana 1 2 3 sudo apt install grafana sudo systemctl enable grafana-server sudo systemctl start grafana-server Configurar dashboards Conectar Prometheus como datasource en Grafana Crear dashboards para CPU, memoria, tráfico de red Con esto podrás monitorizar tus servidores y anticiparte a problemas de rendimiento.\n","date":"2025-10-24T00:00:00Z","permalink":"https://dev.davidalvarezp.com/p/monitorizacion-prometheus-grafana/","title":"Monitoriza tus servidores con Prometheus y Grafana"},{"content":"Docker para principiantes: contenedores desde cero Docker permite empaquetar aplicaciones y dependencias en contenedores ligeros.\nInstalar Docker 1 2 3 sudo apt install docker.io sudo systemctl enable docker sudo systemctl start docker Ejecutar un contenedor 1 docker run -it --name mi-contenedor ubuntu bash Crear una imagen propia 1 docker build -t mi-imagen . Gestionar contenedores 1 2 3 docker ps docker stop mi-contenedor docker rm mi-contenedor Con estos pasos básicos, puedes empezar a usar Docker para simplificar despliegues y entornos de desarrollo.\n","date":"2025-10-23T00:00:00Z","permalink":"https://dev.davidalvarezp.com/p/docker-principiantes/","title":"Docker para principiantes: contenedores desde cero"},{"content":"Gestión segura de contraseñas y autenticación 2FA La seguridad empieza por contraseñas fuertes y autenticación adicional.\nUsa gestores de contraseñas 1Password, Bitwarden, KeePass Configura 2FA siempre que sea posible Google Authenticator, Authy, YubiKey Evita reutilizar contraseñas Cada cuenta debe tener credenciales únicas Siguiendo estas prácticas, mejorarás notablemente la seguridad de tus cuentas.\n","date":"2025-10-23T00:00:00Z","permalink":"https://dev.davidalvarezp.com/p/gestion-contrase%C3%B1as-2fa/","title":"Gestión segura de contraseñas y autenticación 2FA"},{"content":"Integración de CI/CD con GitHub Actions en proyectos Hugo Automatiza el build y despliegue de tu blog Hugo usando GitHub Actions.\nCrear workflow 1 2 3 4 5 6 7 8 9 10 11 12 13 name: Build and Deploy Hugo on: [push] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 Ahora cada push construirá y desplegará automáticamente tu sitio.\n","date":"2025-10-22T00:00:00Z","permalink":"https://dev.davidalvarezp.com/p/ci-cd-github-actions/","title":"Integración de CI/CD con GitHub Actions en proyectos Hugo"},{"content":"Optimización de sitios Hugo para SEO Para que tu blog sea encontrado fácilmente, sigue estas recomendaciones:\nTítulos y meta description Usa títulos claros y descriptivos Incluye meta description únicas por página URLs limpias Evita caracteres extraños Usa guiones en lugar de espacios Estructura de contenido Usa H1, H2, H3 correctamente Listas y subtítulos para mejorar lectura Sitemap y robots.txt Hugo genera sitemap.xml automáticamente Configura robots.txt para motores de búsqueda Siguiendo estas prácticas, tu blog será más visible en Google y otros motores de búsqueda.\n","date":"2025-10-22T00:00:00Z","permalink":"https://dev.davidalvarezp.com/p/seo-hugo/","title":"Optimización de sitios Hugo para SEO"},{"content":"Automatiza tus tareas con Bash y Cron La automatización es clave para administrar servidores de forma eficiente.\nCrear un script Bash 1 2 3 #!/bin/bash echo \u0026#34;Backup de la base de datos iniciado\u0026#34; # comando de backup aquí Hacerlo ejecutable 1 chmod +x backup.sh Programar con Cron 1 crontab -e Agregar línea:\n1 0 2 * * * /ruta/a/backup.sh Ejecuta el script todos los días a las 2:00 AM Con Bash + Cron puedes automatizar casi cualquier tarea repetitiva en tu servidor.\n","date":"2025-10-21T00:00:00Z","permalink":"https://dev.davidalvarezp.com/p/automatizar-tareas-bash-cron/","title":"Automatiza tus tareas con Bash y Cron"},{"content":"Buenas prácticas al publicar un blog técnico: seguridad, SEO y mantenimiento Mantener un blog profesional requiere atención a seguridad, optimización y mantenimiento.\nSeguridad Actualiza Hugo y dependencias Usa HTTPS y certificados válidos Protege accesos con contraseñas seguras SEO Meta tags completos y descriptivos URLs limpias y slug amigable Sitemap y robots.txt Mantenimiento Backups regulares Monitorización del servidor Revisión periódica de enlaces rotos Siguiendo estas buenas prácticas, tu blog será seguro, rápido y fácil de mantener.\n","date":"2025-10-21T00:00:00Z","permalink":"https://dev.davidalvarezp.com/p/buenas-practicas-blog-tecnico/","title":"Buenas prácticas al publicar un blog técnico: seguridad, SEO y mantenimiento"},{"content":"Guía práctica de hardening en Linux El hardening consiste en reducir la superficie de ataque de un sistema. En este artículo, veremos cómo asegurar un servidor Linux de manera práctica.\nActualiza tu sistema 1 sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y Gestiona usuarios y permisos Deshabilita cuentas innecesarias Usa sudo en lugar de root Configura contraseñas fuertes Configura SSH seguro Cambia puerto por defecto Desactiva login de root Usa autenticación con clave Firewall y servicios 1 2 3 4 sudo ufw enable sudo ufw allow 22/tcp sudo ufw allow 80/tcp sudo ufw allow 443/tcp Desactiva servicios que no uses Monitoreo y logs Instala herramientas como fail2ban y auditd Revisa logs periódicamente Con estas prácticas básicas, tu servidor estará mucho más protegido ante ataques comunes.\n","date":"2025-10-20T00:00:00Z","permalink":"https://dev.davidalvarezp.com/p/hardening-linux/","title":"Guía práctica de hardening en Linux"},{"content":"Introducción a SvelteKit: crea tu primer proyecto SvelteKit es un framework moderno para construir aplicaciones web rápidas y optimizadas.\nInstala Node.js 1 2 node -v npm -v Crea un nuevo proyecto 1 2 3 4 npm create svelte@latest my-app cd my-app npm install npm run dev Estructura del proyecto /src/routes → define páginas /src/lib → componentes reutilizables /static → assets Primer componente 1 2 3 4 5 \u0026lt;script\u0026gt; let nombre = \u0026#39;David\u0026#39;; \u0026lt;/script\u0026gt; \u0026lt;h1\u0026gt;Hola {nombre}, bienvenido a SvelteKit!\u0026lt;/h1\u0026gt; ¡Listo! Ahora tienes tu primer proyecto corriendo localmente.\n","date":"2025-10-20T00:00:00Z","permalink":"https://dev.davidalvarezp.com/p/sveltekit-introduccion/","title":"Introducción a SvelteKit: crea tu primer proyecto"}]